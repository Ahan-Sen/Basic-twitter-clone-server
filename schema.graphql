### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Comments {
  Tweet: Tweet!
  User: User!
  commentId: Int
  comments: [Comments]
  content: String!
  createdAt: DateTime
  id: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Following {
  User: User!
  avatar: String
  followId: Int!
  id: Int!
  name: String!
}

type LikedTweet {
  User: User!
  id: Int!
  likedAt: DateTime
  tweet: Tweet!
}

type Mutation {
  createComment(content: String, id: Int): Comments
  createProfile(avatar: String, bio: String, location: String, website: String): Profile
  createReply(commentId: Int, content: String, id: Int): Comments
  createTweet(content: String): Tweet
  deleteComment(id: Int): Comments
  deleteFollow(id: Int): Following
  deleteLike(id: Int): LikedTweet
  deleteTweet(id: Int): Tweet
  follow(avatar: String, followId: Int, name: String): Following
  likeTweet(id: Int): LikedTweet
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String, password: String!): AuthPayload
  updateProfile(avatar: String, bio: String, id: Int, location: String, website: String): Profile
}

type Profile {
  avatar: String
  bio: String
  id: Int!
  location: String
  user: User
  website: String
}

type Query {
  allUsers: [User!]!
  me: User
  tweet(id: Int): Tweet
  tweets: [Tweet]
  user(id: Int): User
}

enum SortOrder {
  asc
  desc
}

type Tweet {
  author: User
  comments: [Comments]
  content: String!
  createdAt: DateTime
  id: Int!
  likes: [LikedTweet]
}

type User {
  Following: [Following]
  comments: [Comments]
  email: String!
  id: Int!
  likedTweet: [LikedTweet]
  name: String!
  profile: Profile
  tweets: [Tweet!]!
}
